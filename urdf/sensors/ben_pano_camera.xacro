<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:macro name="ben_pano_camera" params="name number x:=0.1 y:=0 z:=0 R:=0 P:=0 Y:=0 update_rate:=5">

    <!-- Monocular Camera -->
    <link name="${namespace}/${name}_${number}">
      <visual name="${name}_${number}_visual">
        <origin xyz="-0.033 0 0" rpy="0 0 ${pi/2}"/>
        <geometry>
          <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
        </geometry>
      </visual>
      <collision name="${name}_lens_collision">
        <origin xyz="0.018 0 0" rpy="0 ${pi/2} 0"/>
        <geometry>
          <cylinder radius="0.015" length="0.042"/>
        </geometry>
      </collision>
      <collision name="${name}_box_collision">
        <origin xyz="-0.0205 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.036 0.03 0.03"/>
        </geometry>
      </collision>
      <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
      <inertial>
        <mass value="0.3"/>
        <inertia
          ixx="0.0000450"
          iyy="0.0001746"
          izz="0.0001746"
          ixy="0"
          ixz="0"
          iyz="0"/>
      </inertial>
    </link>

    <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
    <link name="${namespace}/${name}_${number}_optical">
    </link>

    <link name="${namespace}/${name}_${number}_base">
    </link>


    <!-- rotate -->
    <joint name="${namespace}/${name}_to_${name}_${number}_base_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${R} ${P} ${Y}" />
      <parent link="${namespace}/${name}" />
      <child link="${namespace}/${name}_${number}_base" />
    </joint>

    <!-- translate -->
    <joint name="${namespace}/${name}_${number}_base_to_${name}_${number}_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="0 0 0" />
      <parent link="${namespace}/${name}_${number}_base" />
      <child link="${namespace}/${name}_${number}" />
    </joint>

    
    <!-- Camera to optical frame joint.  This is oriented to convert between ENU
         and camera conventions -->
    <joint name="${namespace}/${name}_${number}_to_${name}_${number}_optical_joint" type="fixed">
      <origin xyz="10 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
      <parent link="${namespace}/${name}_${number}" />
      <child link="${namespace}/${name}_${number}_optical" />
    </joint>


    <!-- Gazebo camera setup -->
    <gazebo reference="${namespace}/${name}_${number}">
      <sensor type="camera" name="${name}_${number}_sensor">
        <update_rate>${update_rate}</update_rate>
        <camera name="${name}_${number}_camera">
          <horizontal_fov>1.26</horizontal_fov>
          <image>
            <width>2560</width>
            <height>1440</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.05</near>
            <far>5000</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_plugin_${name}" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${namespace}/${sensor_namespace}${camera_namespace}${name}_${number}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${namespace}/${name}_${number}_optical</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>
</robot>
